#!/bin/bash
set -e -f -u -C

PROG=`basename "$0"`
# May not contain "_" character
TRASHDIR="$HOME/.trash"
mkdir -p "$TRASHDIR"

usage() { echo "Usage: $0 [-rfidv] FILE..." 1>&2; exit 1; }
fail() { echo "$PROG:" "$@"; exit 2; }

RECURSIVE=
DIR=
FORCE=
INTERACTIVE=
VERBOSE=

while getopts ":hrfiIdvEL" o; do
    case "${o}" in
        h)
            usage
            ;;
        r)
            RECURSIVE=true
            ;;
        f)
            FORCE=true
            ;;
        i)
            INTERACTIVE=true
            ;;
        I)
            INTERACTIVE=true
            ;;
        d)
            DIR=true
            ;;
        v)
            VERBOSE=true
            ;;
        L)
            find "$TRASHDIR" | sed s_^"$TRASHDIR/"__ | tail -n +2
            exit 0
            ;;
        E)
            rm -r "$TRASHDIR"
            exit 0
            ;;
        *)
            usage
            ;;
    esac
done
shift $((OPTIND-1))

[ "$#" = 0 ] && usage

DIR="$TRASHDIR"/`date +%Y-%m-%d-%H-%M-%S`
mkdir -p "$DIR"

for file; do
    SKIP=

    if ! [ -e "$file" ]; then
        [ -z "$FORCE" ] && fail "No file or directory \`$file\`"
        SKIP=true
    fi

    if [ -d "$file" ]; then
        EMPTY="$(ls -A "$file")"

        [ -z "$EMPTY" ] && [ -z "$RECURSIVE" ] && [ -z "$DIR" ] && \
            fail "\`$file\` is a directory; use -d or -r to delete"

        [ -z "$RECURSIVE" ] && [ -z "$DIR" ] && \
            fail "\`$file\` is a directory; use -r to delete"

        [ -n "$EMPTY" ] && [ -z "$DIR" ] && \
            fail "\`$file\` is not empty; use -r to delete"

        # Pass through if (EMPTY && DIR || RECURSIVE)
    fi

    if ! [ -r "$file" -a -w "$file" ] && [ -z "$FORCE" ] || \
        [ -n "$INTERACTIVE" ]; then

        echo -n "Remove protected file \`$file\`? "
        read USER
        if ! [ "$USER" == "y" ]; then
            SKIP=true
        fi
    fi

    [ -n "$SKIP" ] && continue

    [ -n "$VERBOSE" ] && echo "$PROG $file"

    mv "$file" "$DIR"
done
