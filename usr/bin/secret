#!/usr/bin/env python2.7

import os, sys
SECRETFILE = "/home/pavpanchekha/priv/secret.gpg"
GPGKEY = os.environ.get("GPGKEY", None)
if not GPGKEY:
    print "WARNING: Variable $GPGKEY not set --- trying user query"
    GPGKEY = raw_input("GPGKEY = ")

import subprocess

def read_secrets():
     gpg = subprocess.Popen(["gpg", "-d", SECRETFILE], stdout=subprocess.PIPE)
     out, _ = gpg.communicate()
     return out

def append_secrets(text):
    current = read_secrets()
    new = current + text
    gpg = subprocess.Popen(["gpg", "-e", "-r", GPGKEY], stdout=subprocess.PIPE, stdin=subprocess.PIPE)
    out, _ = gpg.communicate(new)
    with open(SECRETFILE, "w") as f:
        f.write(out)

def get_password(name):
    read_pw = False
    for line in read_secrets().split("\n"):
    	if line.startswith("Name") and line.split()[1] == name:
            read_pw = True
        elif line.startswith("Password") and read_pw:
            return line[line.index("\"")+1:line.rindex("\"")]
    raise ValueError("No such secret")

def generate_password(len=12):
    lower  = "abcdefghijklmnopqrstuvwxyz"
    upper  = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    number = "0123456789"
    chars  = "`~!@#$%^&*()_+-=?/>.<,|\\}]{[\"':;"

    import random
    passwd = random.choice(lower) + random.choice(upper) + random.choice(number) + random.choice(chars)

    valid = lower * 3 + upper * 3 + number * 5 + chars * 2
    for i in range(4, len):
        passwd += random.choice(valid)

    l = list(passwd)
    random.shuffle(l)
    return "".join(l)

def new_account(name, url):
    pwd = generate_password()
    append_secrets("\nName %s\n" % name + "URL %s\n" % url + "Password \"%s\"\n" % pwd)
    print pwd

def main():
    import sys

    if len(sys.argv) > 1 and sys.argv[1] == "-n":
        assert len(sys.argv) == 4, "USAGE: secrets -n <name> <url>"
        new_account(sys.argv[2], sys.argv[3])
    else:
        assert len(sys.argv) == 2
        print get_password(sys.argv[1])

if __name__ == "__main__":
    if len(sys.argv) > 1 and sys.argv[1] == "-h":
        print "Manage passwords"
        print
        print "USAGE: secret <name>		Print password for account <name>"
        print "     | secret -n <name> <url>	Create a new account <name> at <url> and print the new password"
    else:
        main()

